class h{constructor(e){let{x:r,y:n,width:i,height:s}=e;this.x=r,this.y=n,this.width=i,this.height=s}get top(){return this.y}get bottom(){return this.y+this.height}get left(){return this.x}get right(){return this.x+this.width}}function x(t,e){return{x:{before:Math.max(0,e.left-t.left),after:Math.max(0,t.right-e.right)},y:{before:Math.max(0,e.top-t.top),after:Math.max(0,t.bottom-e.bottom)}}}function m(t){return Array.isArray(t)?new h({x:t[0],y:t[1],width:0,height:0}):t.getBoundingClientRect()}function y(t){const e=t.getBoundingClientRect(),r=getComputedStyle(t),n=r.transform;if(n){let i,s,o,a,f;if(n.startsWith("matrix3d("))i=n.slice(9,-1).split(/, /),s=+i[0],o=+i[5],a=+i[12],f=+i[13];else if(n.startsWith("matrix("))i=n.slice(7,-1).split(/, /),s=+i[0],o=+i[3],a=+i[4],f=+i[5];else return new h(e);const c=r.transformOrigin,u=e.x-a-(1-s)*parseFloat(c),d=e.y-f-(1-o)*parseFloat(c.slice(c.indexOf(" ")+1)),l=s?e.width/s:t.offsetWidth+1,g=o?e.height/o:t.offsetHeight+1;return new h({x:u,y:d,width:l,height:g})}else return new h(e)}function w(t,e,r){if(typeof t.animate>"u")return{finished:Promise.resolve()};let n;try{n=t.animate(e,r)}catch{return{finished:Promise.resolve()}}return typeof n.finished>"u"&&(n.finished=new Promise(i=>{n.onfinish=()=>{i(n)}})),n}const p="cubic-bezier(0.4, 0, 0.2, 1)";export{h as B,w as a,x as b,m as g,y as n,p as s};
